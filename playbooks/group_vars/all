---
ansible_user: ljishen
ansible_ssh_private_key_file: /home/{{ lookup('env', 'USER') }}/keys/id_rsa

maven_version: 3.5.4
rocksdbjni_rmi_version: 0.0.0.3
fio_version: 3.8

workdir: /tmp/ycsb-rocksdb
rocksdb_data_dirname: ycsb-rocksdb-data

# This variable accepts the name of YCSB core workloads and user-defined workloads.
# You can provide your own workload parameter files
# by passing variables through the command line
#   --extra-vars "ycsb_run_workloads=workloadc,/path/to/workload1,/path/to/workload2"
ycsb_run_workloads: "{{ playbook_dir }}/roles/run/templates/myworkloada"

# Target number of operations per second for throttling the data insertion
# during the loading phase to help to build a steady LSM tree (by allowing
# more time for compaction). Setting to the value of 0 can disable the throttling.
target_ops_per_sec_on_load: 3500

# The default maximum number of iteration to evaluate the steady state for
# each test. For some volatile drive which is harder to get to the steady
# state, this number can be set to a higher number, e.g. 100.
maximum_rounds: 25


######################### RocksDB Properties #########################

# You can use your own RocksDB options file on the originating/master machine
# by passing variables through the command line
#   --extra-vars "rocksdb_options_file=/path/to/optionsfile"
# See https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#passing-variables-on-the-command-line
rocksdb_options_file: "{{ playbook_dir }}/roles/run/templates/OPTIONS"

# This value needs to be bigger than number of digits in the recordcount
key_sz_bytes: 16

# This value cannot be less than 13 + len(str(fieldcount - 1))
# The min_value_sz_bytes would be
#   max_value_sz_bytes + 1 - len(str(fieldcount - 1))
# The default value of fieldcount is 1
max_value_sz_bytes: 4096


######################### Debug Properties ###########################

# Whether to run the YCSB loading phase only in the first round (yes), or in
# every round (no).
# This option should be 'yes' for most workloads. For debug purpose, you can
# try to set to no.
load_data_once: no

# Whether to run the YCSB loading phase. If set to 'no', the loading phase will
# be toally skipped without regarding the value of option 'load_data_once'.
load_data: yes


######################### Internal Parameters #########################

core_workloads: [ 'workloada', 'workloadb', 'workloadc', 'workloadd', 'workloade', 'workloadf' ]
runtimes_dir: "{{ workdir }}/runtimes"
software_dir: "{{ runtimes_dir }}/software"
ycsb_dir: "{{ software_dir }}/YCSB/{{ inventory_hostname }}/{{ device_name }}"
maven_dir: "{{ software_dir }}/apache-maven-{{ maven_version }}"
fio_dir: "{{ software_dir }}/fio-fio-{{ fio_version }}"
rocksdbjni_rmi_dir: "{{ software_dir }}/rocksdbjni-rmi"
rocksdbjni_rmi_jar: "{{ rocksdbjni_rmi_dir }}/target/rocksdbjni-rmi-{{ rocksdbjni_rmi_version }}-jar-with-dependencies.jar"
...
