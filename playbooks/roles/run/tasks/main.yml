---
- name: ensure the presence of local tmp data dir {{ local_tmp_data_dir }}
  become: yes
  local_action:
    module: file
    owner: "{{ lookup('env', 'USER') }}"
    path: "{{ local_tmp_data_dir }}"
    state: directory

- name: fetch the core workload parameter files
  fetch:
    dest: "{{ local_tmp_data_dir }}/"
    fail_on_missing: yes
    flat: yes
    src: "{{ ycsb_dir }}/workloads/{{ item }}"
  loop: "{{ core_workloads }}"
  run_once: yes

- name: ensure the presence of remote dirs
  become: yes
  file:
    owner: "{{ ansible_user }}"
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ device_mountpoint }}"
    - "{{ remote_scripts_dir }}"
    - "{{ remote_pid_files_dir }}"

- block:
    - name: get info of command {{ fio_bin }} from the shell
      command: command -v {{ fio_bin }}
      changed_when: False
      ignore_errors: yes
      register: comm_res

    - name: verify the existence of {{ fio_bin }}
      debug:
        msg: >
          Please double check the existence of the fio path {{ fio_bin }}
      when: comm_res.rc != 0
      failed_when: comm_res != 0

    - name: get size of {{ device_fullname }} in bytes
      become: yes
      command: blockdev --getsize64 {{ device_fullname }}
      changed_when: False
      register: comm_res
      changed_when: False

    - set_fact:
        device_size: "{{ comm_res.stdout }}"

    - name: download the device purge script
      get_url:
        backup: no
        dest: "{{ remote_scripts_dir }}/{{ device_purge_script_filename }}"
        force: yes
        mode: u+rx
        owner: "{{ ansible_user }}"
        url: https://raw.githubusercontent.com/ljishen/SSSPT/master/playbooks/roles/common/files/{{ device_purge_script_filename }}
  when: load_data

- name: copy the script for generating I/O size distribution to the remote
  copy:
    backup: no
    dest: "{{ remote_scripts_dir }}/"
    force: yes
    mode: u+rx
    src: "{{ role_path }}/files/{{ io_size_dist_script_filename }}"

- name: kill the remnant processes for tracing block requests
  become: yes
  command: pkill -SIGINT --full blktrace.+{{ device_name }}
  register: comm_res
  changed_when: comm_res.rc == 0
  ignore_errors: yes

- include_tasks: repeat_workload.yml
  vars:
    rocksdb_data_dir: "{{ device_mountpoint }}/{{ rocksdb_data_dirname }}"
    cur_workload: "{{ cur_workload_path | basename }}"
    notes: "{{ cur_workload }}"
  loop: "{{ run_workloads }}"
  loop_control:
    loop_var: cur_workload_path
...
