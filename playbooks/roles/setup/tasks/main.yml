---
- name: ensure the presence of {{ workdir }}
  file:
    path: "{{ workdir }}"
    state: directory
- name: download RocksDB source code
  unarchive:
    creates: "{{ rocksdb_dir }}"
    dest: "{{ workdir }}"
    keep_newer: no
    remote_src: yes
    src: https://codeload.github.com/facebook/rocksdb/tar.gz/v{{ rocksdb_version }}
- name: check if JDK installed
  command: javac -version
  register: comm_res
  changed_when: False
- block:
    - name: add WebUpd8 Oracle Java PPA
      apt_repository:
        repo: ppa:webupd8team/java
        state: present
        update_cache: yes
    - name: auto accept Oracle license
      shell: >
        echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
    - name: install JDK 8
      apt:
        install_recommends: no
        name:
          - oracle-java8-installer
        state: present
  become: yes
  when: comm_res.rc != 0
- name: detect JAVA_HOME
  shell: dirname "$(dirname "$(readlink -f "$(which javac)")")"
  register: comm_res
  changed_when: False
- name: save JAVA_HOME
  set_fact:
    java_home: "{{ comm_res.stdout }}"
- name: print JAVA_HOME
  debug: msg="JAVA_HOME={{ java_home }}"
- name: install dependent apt packages
  become: yes
  apt:
    autoclean: yes
    install_recommends: no
    name:
      - gcc
      - libgflags-dev
      - libsnappy-dev
      - zlib1g-dev
      - libbz2-dev
      - liblz4-dev
      - libzstd-dev
    state: present
    update_cache: yes
- name: download Apache Maven
  unarchive:
    creates: "{{ maven_dir }}"
    dest: "{{ workdir }}"
    keep_newer: no
    remote_src: yes
    src: http://mirrors.sorengard.com/apache/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz
- name: build RocksJava
  command: >
    make JAVA_HOME={{ java_home }} -j{{ ansible_processor_vcpus - 2 }} rocksdbjavastatic
  args:
    chdir: "{{ rocksdb_dir }}"
    creates: "{{ rocksdbjni_src }}"
- name: ensure the presence of rocksdbjni dir in maven repo
  file:
    path: "{{ rocksdbjni_dest_dir }}"
    state: directory
- name: copy rocksdbjni jar to maven repository
  copy:
    dest: "{{ rocksdbjni_dest_dir }}/rocksdbjni-{{ rocksdb_version }}.jar"
    force: yes
    remote_src: yes
    src: "{{ rocksdbjni_src }}"
- name: copy rocksdbjni pom to maven repository
  copy:
    dest: "{{ rocksdbjni_dest_pom }}"
    force: yes
    remote_src: yes
    src: "{{ rocksdb_dir }}/java/rocksjni.pom"
- name: update the version of the rocksdbjni-{{ rocksdb_version }}.pom
  lineinfile:
    backrefs: yes
    create: no
    line: '\1{{ rocksdb_version }}\2'
    path: "{{ rocksdbjni_dest_pom }}"
    regexp: '(^\\s+<version>)\-(</version>$)'
    state: present
- name: clone YCSB
  git:
    bare: no
    clone: yes
    depth: 1
    dest: "{{ ycsb_dir }}"
    force: yes
    repo: https://github.com/ljishen/YCSB.git
    update: yes
    version: "{{ ycsb_version }}"
- name: update RocksDB version in YCSB
  lineinfile:
    backrefs: yes
    create: no
    line: '\1{{ rocksdb_version }}\2'
    path: "{{ ycsb_dir }}/pom.xml"
    regexp: '(^\\s+<rocksdb\.version>)[\\d.]+(</rocksdb\.version>$)'
    state: present
- name: build RocksDB YCSB binding
  command: >
    {{ maven_dir }}/bin/mvn -pl com.yahoo.ycsb:rocksdb-binding -am clean package
  args:
    chdir: "{{ ycsb_dir }}"
    creates: "{{ ycsb_dir }}/rocksdb/target"
...
