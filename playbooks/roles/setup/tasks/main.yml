---
- name: ensure the presence of {{ workdir }}
  become: yes
  file:
    owner: "{{ ansible_user }}"
    path: "{{ workdir }}"
    state: directory

- name: ensure the presence of {{ workdir }} (local)
  become: yes
  file:
    owner: "{{ lookup('env', 'USER') }}"
    path: "{{ workdir }}"
    state: directory
  delegate_to: localhost
  run_once: yes

- name: check if JDK installed
  command: javac -version
  ignore_errors: yes
  register: comm_res
  changed_when: False

- block:
    - name: add WebUpd8 Oracle Java PPA
      apt_repository:
        repo: ppa:webupd8team/java
        state: present
        update_cache: yes

    - name: auto accept Oracle license
      shell: >
        echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections

    - name: install JDK 8
      apt:
        install_recommends: no
        name:
          - oracle-java8-installer
        state: present
  become: yes
  when: comm_res.rc != 0

- name: install dependent apt packages
  become: yes
  apt:
    autoclean: yes
    install_recommends: no
    name:
      - python3-numpy
      - blktrace
      - parted
      - xfsprogs
      - hdparm
      - fio
    state: present
    update_cache: yes

- name: download Apache Maven
  unarchive:
    creates: "{{ maven_dir }}"
    dest: "{{ runtimes_dir }}"
    keep_newer: no
    remote_src: yes
    src: http://mirrors.advancedhosters.com/apache/maven/maven-3/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz
  delegate_to: localhost
  run_once: yes

- name: clone YCSB to local
  git:
    bare: no
    clone: yes
    depth: 1
    dest: "{{ ycsb_dir }}"
    force: yes
    remote: origin
    repo: https://github.com/ljishen/YCSB.git
    update: yes
    version: remote-rocksdb
  loop: "{{ device_names }}"
  loop_control:
    loop_var: device_name
  delegate_to: localhost
  run_once: yes

- name: download rocksdbjni-rmi
  get_url:
    backup: no
    dest: "{{ rocksdbjni_rmi_exe }}"
    force: yes
    owner: "{{ ansible_user }}"
    url: "https://oss.sonatype.org/content/groups/staging/com/github/ljishen/\
      rocksdbjni-rmi/{{ rocksdbjni_rmi_version }}/\
      rocksdbjni-rmi-{{ rocksdbjni_rmi_version }}-jar-with-dependencies.jar"

- name: config scaling governor for online CPUs
  become: yes
  script: "{{ role_path }}/files/config_cpu.sh {{ cpu_scaling_governor }}"
  register: cpu_config_res
  changed_when: "cpu_config_res.rc == 0"

- name: set the nofile soft limit to {{ nofile_soft_limit }}
  become: yes
  pam_limits:
    domain: "{{ ansible_user }}"
    limit_item: nofile
    limit_type: soft
    value: "{{ nofile_soft_limit }}"

- block:
    - name: check the mountpoint of debugfs
      command: findmnt --noheadings --output TARGET --source debugfs
      register: comm_res
      changed_when: False
      ignore_errors: yes

    - name: mount the debugfs if necessary
      become: yes
      command: mount -t debugfs none /sys/kernel/debug
      args:
        warn: no
      changed_when: comm_res.rc != 0
      when: comm_res.rc != 0

    - name: save the mountpoint of debugfs
      set_fact:
        debugfs_mountpoint: "{{ comm_res.stdout if comm_res.rc == 0 else '/sys/kernel/debug' }}"
  when: trace_transactions_block_rq or trace_load_block_rq
...
